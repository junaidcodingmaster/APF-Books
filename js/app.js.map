{"version":3,"sources":["app.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Hammer","$","nonbounce","on","toggleClass","setTimeout","removeClass","$carousel","carousel","$form","submit","preventDefault","find","val","css","data","serialize","html","ajax","url","method","done","res","ga","console","log","./nonbounce","./screenshots","hammerjs","2","defaults","$these","touchstartInit","touchmoveInit","each","push","this","fn","jQuery","3","previOS","$item1","$screenshotsiOS","$item2","$item3","$item4","$item5","$item6","$itemActive","$item8","$item9","$item10","opacity","z-index","addClass","next","$screenshots","$item11","$item12","$item13","nextiOS","prev","filter","$prev","$next","$previOS","$nextiOS","$active","$sreenshotsAndroid","$sreenshotsApple","hasClass","is","fadeOut","fadeIn","4","window","document","exportName","undefined","setTimeoutContext","timeout","context","bindFn","invokeArrayArg","arg","Array","isArray","obj","iterator","forEach","hasOwnProperty","deprecate","name","message","deprecationMessage","stack","replace","warn","apply","arguments","inherit","child","base","properties","childP","baseP","prototype","Object","create","constructor","_super","assign","boolOrFn","args","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","target","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","indexOf","trim","split","inArray","src","findByKey","toArray","slice","uniqueArray","key","sort","results","values","b","prefixed","property","prefix","prop","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","Input","manager","callback","self","options","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","x","overallVelocityY","y","abs","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","last","lastInterval","COMPUTE_INTERVAL","v","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","props","PROPS_XY","Math","sqrt","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","splice","DEDUP_TIMEOUT","isSyntheticEvent","dx","dy","DEDUP_DISTANCE","TouchAction","value","set","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","getTouchActionProps","NATIVE_TOUCH_ACTION","touchMap","cssSupports","CSS","supports","Recognizer","id","state","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","item","add","recognizeWith","requireFailure","style","cssProps","triggerDomEvent","event","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","createElement","Date","TypeError","output","index","source","nextKey","extend","dest","merge","keys","MOBILE_REGEX","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","5","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_MAP","compute","update","getTouchAction","join","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","process","reset","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","stop","force","stopped","curRecognizer","existing","remove","events","off","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","define","amd"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar Hammer = require('hammerjs');\nrequire('./screenshots');\nrequire('./nonbounce');\n\n$(function() {\n\n    $.nonbounce();\n\n    // Mobile navigation toggle button\n    $('#toggler').on('click', function() {\n        $('body').toggleClass('open-nav');\n    });\n\n    // Screenshots modal button\n    $('#modal-screenshots').on('show.bs.modal', function (e) {\n        setTimeout(function() {\n            $('body').removeClass('open-nav');\n        }, 400);\n    });\n\n    // Descriptions carousel swipe and tap\n    var $carousel = $('#carousel');\n    Hammer($carousel[0]).on('swipeleft tap', function() {\n        $carousel.carousel('next');\n    });\n    Hammer($carousel[0]).on('swiperight', function() {\n        $carousel.carousel('prev');\n    });\n\n    // MailChimp email subscribe\n    var $form = $('#form');\n    $form.submit(function(e) {\n        e.preventDefault();\n\n        if (!$form.find('[name=\"email\"]').val().length) {\n            $form.find('.form__help-text').css('color', 'red');\n            return false;\n        }\n        var data = $form.serialize();\n\n        $form.html(\"<h3 class='form__msg'>Thanks for signing up!</h3>\");\n\n        $.ajax({\n            url: './ajax.php',\n            method: 'POST',\n            data: data\n        }).done(function(res) {\n\n            // Send GAT events\n            ga('set', 'page', '/signup_success');\n            ga('send', 'pageview');\n\n            console.log(res);\n        });\n    });\n});\n},{\"./nonbounce\":2,\"./screenshots\":3,\"hammerjs\":4}],2:[function(require,module,exports){\n(function($) {\n    \"use strict\";\n\n    var startY;\n\n    var defaults = {\n        \"$these\": [],\n        \"touchstartInit\": false,\n        \"touchmoveInit\": false\n    };\n\n    $(\".nonbounce\").each(function() {\n        defaults.$these.push($(this));\n    });\n\n    var initTouchHandling = function() {\n        if (!defaults.touchstartInit) {\n            defaults.touchstartInit = true;\n            $(window).on(\"touchstart\", touchstart);\n        }\n\n        if (!defaults.touchmoveInit) {\n            defaults.touchmoveInit = true;\n            $(window).on(\"touchmove\", touchmove);\n        }\n    };\n\n    var compareElem = function($elem, i, target) {\n        return !!$(target).closest($elem).length;\n    };\n\n    var hasCorrectBounds = function(evt) {\n        var y = (evt.originalEvent.touches) ? evt.originalEvent.touches[0].screenY : evt.originalEvent.screenY;\n        var nonbounce = $(evt.target).closest('.nonbounce')[0];\n\n        if (!nonbounce) {\n            return true;\n        }\n\n        // Prevents scrolling of content to top\n        if (nonbounce.scrollTop === 0 && startY <= y) {\n            return false;\n        }\n\n        // Prevents scrolling of content to bottom\n        if (nonbounce.scrollHeight-nonbounce.offsetHeight === nonbounce.scrollTop && startY >= y) {\n            return false;\n        }\n\n        return true;\n    };\n\n    var touchstart = function(evt) {\n        evt = evt.originalEvent || evt;\n        startY = (evt.touches) ? evt.touches[0].screenY : evt.screenY;\n    };\n\n    var touchmove = function(evt) {\n        if (!(evt.originalEvent.touches && evt.originalEvent.touches.length > 1)) {\n            // Prevents scrolling of all but the nonbounce elements\n            if (!~$.inArray(true, $.map(defaults.$these, compareElem, evt.target))) {\n                evt.preventDefault();\n            }\n\n            // Prevents scrolling of nonbounce element if bound conditions are met\n            if (!hasCorrectBounds(evt)) {\n                evt.preventDefault();\n            }\n        }\n\n    };\n\n    $.fn.nonbounce = function() {\n        //initTouchHandling();\n\n        return this.each(function() {\n          defaults.$these.push($(this));\n        });\n    };\n\n    $.nonbounce = function() {\n       // initTouchHandling();\n    };\n})(jQuery);\n},{}],3:[function(require,module,exports){\nvar Hammer = require('hammerjs');\n\n// Screenshots carousel\nvar $screenshots = $('.screenshots__carousel').filter('.screenshots__carousel--android');\nvar $prev = $screenshots.find('.arrow--prev');\nvar $next = $screenshots.find('.arrow--next');\n\nHammer($screenshots.filter('.screenshots__carousel--android')[0]).on('swipeleft', next);\nHammer($screenshots.filter('.screenshots__carousel--android')[0]).on('swiperight', prev);\n\n$prev.on('click', prev);\n$next.on('click', next);\n\n// Screenshots carousel for iOS\nvar $screenshotsiOS = $('.screenshots__carousel').filter('.screenshots__carousel--apple');\nvar $previOS = $screenshotsiOS.find('.arrow--prev');\nvar $nextiOS = $screenshotsiOS.find('.arrow--next');\n\nHammer($screenshotsiOS.filter('.screenshots__carousel--apple')[0]).on('swipeleft', nextiOS);\nHammer($screenshotsiOS.filter('.screenshots__carousel--apple')[0]).on('swiperight', previOS);\n\n$previOS.on('click', previOS);\n$nextiOS.on('click', nextiOS);\n\n\nfunction previOS(e) {\n    e.preventDefault();\n\n    var $item1 = $screenshotsiOS.find('.item-1');\n    var $item2 = $screenshotsiOS.find('.item-2');\n    var $item3 = $screenshotsiOS.find('.item-3');\n    var $item4 = $screenshotsiOS.find('.item-4');\n    var $item5 = $screenshotsiOS.find('.item-5');\n    var $item6 = $screenshotsiOS.find('.item-6');\n    var $itemActive = $screenshotsiOS.find('.active');\n    var $item8 = $screenshotsiOS.find('.item-8');\n    var $item9 = $screenshotsiOS.find('.item-9');\n    var $item10 = $screenshotsiOS.find('.item-10');\n\n    $item10.css({'opacity': '0', 'z-index': '-1'}).removeClass('item-10').addClass('item-1');\n\n    $item9.removeClass('item-9').addClass('item-10');\n    $item8.removeClass('item-8').addClass('item-9');\n    $itemActive.removeClass('active').addClass('item-8');\n    $item6.removeClass('item-6').addClass('active');\n    $item5.removeClass('item-5').addClass('item-6');\n    $item4.removeClass('item-4').addClass('item-5');\n    $item3.removeClass('item-3').addClass('item-4');\n    $item2.removeClass('item-2').addClass('item-3');\n    $item1.removeClass('item-1').addClass('item-2');\n\n    setTimeout(function() {\n        $item10.css({'z-index': '1', opacity: '0.5'});\n    }, 400);\n}\n\nfunction next(e) {\n    e.preventDefault();\n\n    var $item1 = $screenshots.find('.item-1');\n    var $item2 = $screenshots.find('.item-2');\n    var $item3 = $screenshots.find('.item-3');\n    var $item4 = $screenshots.find('.item-4');\n    var $item5 = $screenshots.find('.item-5');\n    var $item6 = $screenshots.find('.item-6');\n    var $itemActive = $screenshots.find('.active');\n    var $item8 = $screenshots.find('.item-8');\n    var $item9 = $screenshots.find('.item-9');\n    var $item10 = $screenshots.find('.item-10');\n    var $item11 = $screenshots.find('.item-11');\n    var $item12 = $screenshots.find('.item-12');\n    var $item13 = $screenshots.find('.item-13');\n\n    $item13.removeClass('item-13').addClass('item-12');\n    $item12.removeClass('item-12').addClass('item-11');\n    $item11.removeClass('item-11').addClass('item-10');\n    $item10.removeClass('item-10').addClass('item-9');\n    $item9.removeClass('item-9').addClass('item-8');\n    $item8.removeClass('item-8').addClass('active');\n    $itemActive.removeClass('active').addClass('item-6');\n    $item6.removeClass('item-6').addClass('item-5');\n    $item5.removeClass('item-5').addClass('item-4');\n    $item4.removeClass('item-4').addClass('item-3');\n    $item3.removeClass('item-3').addClass('item-2');\n    $item2.removeClass('item-2').addClass('item-1');\n    $item1.css({'opacity': '0', 'z-index': '-1'}).removeClass('item-1').addClass('item-13');\n\n    setTimeout(function() {\n        $item1.css({'z-index': '1', opacity: '0.5'});\n    }, 400);\n}\n\nfunction nextiOS(e) {\n    e.preventDefault();\n\n    var $item1 = $screenshotsiOS.find('.item-1');\n    var $item2 = $screenshotsiOS.find('.item-2');\n    var $item3 = $screenshotsiOS.find('.item-3');\n    var $item4 = $screenshotsiOS.find('.item-4');\n    var $item5 = $screenshotsiOS.find('.item-5');\n    var $item6 = $screenshotsiOS.find('.item-6');\n    var $itemActive = $screenshotsiOS.find('.active');\n    var $item8 = $screenshotsiOS.find('.item-8');\n    var $item9 = $screenshotsiOS.find('.item-9');\n    var $item10 = $screenshotsiOS.find('.item-10');\n\n    $item10.removeClass('item-10').addClass('item-9');\n    $item9.removeClass('item-9').addClass('item-8');\n    $item8.removeClass('item-8').addClass('active');\n    $itemActive.removeClass('active').addClass('item-6');\n    $item6.removeClass('item-6').addClass('item-5');\n    $item5.removeClass('item-5').addClass('item-4');\n    $item4.removeClass('item-4').addClass('item-3');\n    $item3.removeClass('item-3').addClass('item-2');\n    $item2.removeClass('item-2').addClass('item-1');\n    $item1.css({'opacity': '0', 'z-index': '-1'}).removeClass('item-1').addClass('item-10');\n\n    setTimeout(function() {\n        $item1.css({'z-index': '1', opacity: '0.5'});\n    }, 400);\n}\n\n\nfunction prev(e) {\n    e.preventDefault();\n\n    var $item1 = $screenshots.find('.item-1');\n    var $item2 = $screenshots.find('.item-2');\n    var $item3 = $screenshots.find('.item-3');\n    var $item4 = $screenshots.find('.item-4');\n    var $item5 = $screenshots.find('.item-5');\n    var $item6 = $screenshots.find('.item-6');\n    var $itemActive = $screenshots.find('.active');\n    var $item8 = $screenshots.find('.item-8');\n    var $item9 = $screenshots.find('.item-9');\n    var $item10 = $screenshots.find('.item-10');\n    var $item11 = $screenshots.find('.item-11');\n    var $item12 = $screenshots.find('.item-12');\n    var $item13 = $screenshots.find('.item-13');\n\n    $item13.css({'opacity': '0', 'z-index': '-1'}).removeClass('item-13').addClass('item-1');\n\n    $item12.removeClass('item-12').addClass('item-13');\n    $item11.removeClass('item-11').addClass('item-12');\n    $item10.removeClass('item-10').addClass('item-11');\n    $item9.removeClass('item-9').addClass('item-10');\n    $item8.removeClass('item-8').addClass('item-9');\n    $itemActive.removeClass('active').addClass('item-8');\n    $item6.removeClass('item-6').addClass('active');\n    $item5.removeClass('item-5').addClass('item-6');\n    $item4.removeClass('item-4').addClass('item-5');\n    $item3.removeClass('item-3').addClass('item-4');\n    $item2.removeClass('item-2').addClass('item-3');\n    $item1.removeClass('item-1').addClass('item-2');\n\n    setTimeout(function() {\n        $item13.css({'z-index': '1', opacity: '0.5'});\n    }, 400);\n}\n\n\n// Screenshots toggle button\n$('.screenshots__toggler').on('click', function() {\n\n    // Send GAT events\n    ga('set', 'page', '/screenshots');\n    ga('send', 'pageview');\n\n    var $active = $(this).find('.active');\n    var $sreenshotsAndroid = $('.screenshots__carousel--android');\n    var $sreenshotsApple = $('.screenshots__carousel--apple');\n\n    if ($active.hasClass('active--apple') && !$active.is(':animated')) {\n        $sreenshotsApple.fadeOut(0, function() {\n\n            ga('set', 'page', '/screenshots/android');\n            ga('send', 'pageview');\n\n            $sreenshotsAndroid.fadeIn();\n        });\n    } else {\n        $sreenshotsAndroid.fadeOut(0, function() {\n\n            // Send GAT events\n            ga('set', 'page', '/screenshots/apple');\n            ga('send', 'pageview');\n\n            $sreenshotsApple.fadeIn();\n        });\n    }\n\n    $active.toggleClass('active--apple');\n});\n\n},{\"hammerjs\":4}],4:[function(require,module,exports){\n/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n},{}]},{},[1]);\n"]}